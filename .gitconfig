[user]
	name = Avi Nerenberg
	email = devavmeister@gmail.com
	signingkey = /home/avi/.ssh/id_ed25519.pub
[core]
	autocrlf = false
	editor = code -w
[alias]
	unstage = reset --
	# git commit tree formatted printouts - https://stackoverflow.com/questions/1057564/pretty-git-branch-graphs
	lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	lg = !"git lg1"
	# revert modified permissions - https://stackoverflow.com/a/4408378/5425359
	permission-reset = ! git diff -p -R --no-ext-diff --no-color | grep -E '\"^(diff|(old|new) mode)\"' --color=never | git apply
	# list git aliases
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
	# rm branches with a deleted upstream (w/ confirmation) - combination of: https://stackoverflow.com/a/31776247/5425359, https://stackoverflow.com/a/28464339/5425359
	# ! can delete working branches w/ uncommitted changes, use with caution
	# NOTE - check out this page for another (possibly more robust) approach: https://blog.mimacom.com/git-aliases-you-wished-you-had/
	# NOTE - also see omz's similar aliases `gbg`, `gbgd` & `gbgD`
	gone = ! git fetch -p && git for-each-ref --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" {print $1}' >/tmp/merged-branches && vi /tmp/merged-branches && xargs -r git branch -D </tmp/merged-branches
	# open the diff b/w two commits in VSCode
	open-diff = ! git diff --name-only $1 $2 | xargs -I {} code "{}"
	# open a PR's modified files in VSCode - https://stackoverflow.com/a/2233926/5425359
	# NOTE - relies on `gh` to get the PR diff
	open-pr-diff = ! gh pr diff --name-only | xargs -I {} code "{}"
[commit]
	gpgsign = true
	signoff = true
[gpg]
	program = gpg
	format = ssh # using `ssh` allows us to keep a uniform `signingkey` value that points to the SSH key's location, rather than a fingerprint specific to that GPG key (above)
[filter "gitignore"]           # TODO - WIP https://stackoverflow.com/a/16244970/5425359
	clean = "sed '/#gitignore$/d'" # ignore files ending in " #gitignore" (used by .gitconfig above)
	smudge = cat
[push]
	autoSetupRemote = true
